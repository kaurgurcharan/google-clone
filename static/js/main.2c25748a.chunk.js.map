{"version":3,"sources":["components/StateProvider.js","components/reducer.js","components/Search.js","pages/Home.js","components/useGoogleSearch.js","components/keys.js","components/SearchPage.js","App.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","to","Avatar","src","alt","useGoogleSearch","data","setData","useEffect","a","fetch","then","response","json","result","fetchData","SearchPage","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2c25748a.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\n    {children}\n  </StateContext.Provider>\n  );\n\n  export const useStateValue = () => useContext(StateContext);","\nexport const initialState = {\n  term: null,\n};\n\nexport const actionTypes = {\n  SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\n};\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch(action.type) {\n    case actionTypes.SET_SEARCH_TERM:\n      return {\n        ...state,\n        term:action.term,\n      };\n      default: \n      return state;\n  }\n};\n\n\nexport default reducer;","import React, { useState } from 'react'\nimport './Search.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { Button } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { useStateValue } from './StateProvider';\nimport { actionTypes } from './reducer';\n\nfunction Search({ hideButtons = false }) {\n//eslint-disable-next-line\n  const [{}, dispatch] = useStateValue();\n\n  const [input, setInput] = useState(\"\");\n  const history = useHistory();\n\n  const search = (e) => {\n    e.preventDefault();\n\n    console.log(\"you hit the search button >> \", input);\n\n    dispatch({\n      type: actionTypes.SET_SEARCH_TERM,\n      term: input\n    })\n\n    history.push(\"/search\");\n  }\n\n  return (\n    <form className=\"search\">\n      <div className=\"search__input\">\n        <SearchIcon className=\"search__inputIcon\"/>\n        <input value={input} onChange= {e => setInput(e.target.value)}/>\n        <MicIcon />\n      </div>\n      {!hideButtons ? (\n        <div className=\"search__buttons\">\n        <Button type=\"submit\" onClick= {search} variant=\"outlined\">Google Search</Button>\n        <Button variant=\"outlined\">I'm Feeling Lucky</Button>\n      </div>\n      ) : (\n      <div className=\"search__buttons\">\n        <Button className=\"search__buttonsHidden\" \n          type=\"submit\" onClick= {search} variant=\"outlined\">\n          Google Search\n        </Button>\n        <Button className=\"search__buttonsHidden\" \n        variant=\"outlined\">I'm Feeling Lucky</Button>\n      </div>\n      )}\n      \n    </form>\n  )\n}\n\nexport default Search;\n","import React from 'react'\nimport './Home.css';\nimport { Link } from 'react-router-dom';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport { Avatar } from '@material-ui/core';\nimport Search from '../components/Search';\n\nfunction Home() {\n  return (\n    <div className=\"home\">\n      <div className=\"home__header\">\n        <div className=\"home__headerLeft\">\n          <Link to=\"/about\">About</Link>\n          <Link to=\"/store\">Store</Link>\n        </div>\n        <div className=\"home__headerRight\">\n        <Link to=\"/gmail\">Gmail</Link>\n        <Link to=\"/images\">Images</Link>\n        <AppsIcon/>\n        <Avatar/> \n        </div>\n      </div>\n      \n      <div className=\"home__body\">\n        <img src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\" alt=\"\"/>\n      </div>\n      <div className=\"home__inputContainer\">\n        <Search /> \n      </div>\n    </div>\n  )\n}\n\nexport default Home;\n\n","import { useState, useEffect} from 'react'\nimport API_KEY from './keys';\n\n\nconst CONTEXT_KEY = \"c52e9e221726b4525\";\n\nconst useGoogleSearch = (term) =>  {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async() => {\n      // console.log(\"Ravjot \"+ `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`)\n      fetch(\n        `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\n      )\n      .then(response => response.json())\n      .then(result => {\n        setData(result)\n      })\n    }\n    fetchData();\n  }, [term])\n return { data }\n};\n\nexport default useGoogleSearch;\n","export const API_KEY = \"AIzaSyBn0bS6HHPSvGkl-yhY5hqVYE-0SH08n7E\";\n\n\nexport default API_KEY;","import React from 'react'\nimport './SearchPage.css';\nimport { useStateValue } from './StateProvider';\n// import useGoogleSearch from './useGoogleSearch';\nimport { Link } from 'react-router-dom';\nimport Search from './Search';\n// import Response from './response';\nimport useGoogleSearch from './useGoogleSearch';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ImageIcon from '@material-ui/icons/Image';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport RoomIcon from '@material-ui/icons/Room';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\n\nfunction SearchPage() {\n  //eslint-disable-next-line\nconst [{ term }, dispatch] = useStateValue();\n\n//LIVE API CALL\nconst { data } = useGoogleSearch(term);\n\n//Mock API Call\n// const data = Response;\n\nconsole.log(data);\n  \n  return (\n    <div className=\"searchPage\">\n      <div className=\"searchPage__header\">\n        <Link to=\"/\">\n          <img \n          className=\"searchPage__logo\" \n          src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\n          alt=\"\"\n          />\n        </Link>\n        <div className=\"searchPage__headerBody\">\n          <Search hideButtons />\n          <div className=\"searchPage__options\">\n            <div className=\"searchPage__optionsLeft\">\n              <div className=\"searchPage__option\">\n                <SearchIcon/>\n                <Link to=\"/all\">All</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <DescriptionIcon/>\n                <Link to=\"/news\">News</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <ImageIcon/>\n                <Link to=\"/images\">Images</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <LocalOfferIcon/>\n                <Link to=\"/shopping\">Shopping</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <RoomIcon/>\n                <Link to=\"/maps\">Maps</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <MoreVertIcon/>\n                <Link to=\"/more\">More</Link>\n              </div>\n            </div>\n            <div className=\"searchPage__optionsRight\">\n              <div className=\"searchPage__option\">\n                <Link to=\"/settings\">Settings</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <Link to=\"/tools\">Tools</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {term && (\n        <div className=\"searchPage__results\">\n          <p className=\"searchPage__resultCount\">\n            About {data?.searchInformation.formattedTotalResults} results ({data?.searchInformation.formattedSearchTime} seconds) for {term}\n          </p>\n          {data?.items.map(item => (\n            <div className=\"searchPage__result\">\n              <a href={item.link}>\n                {item.pagemap?.cse_image?.length >0 && item.pagemap?.cse_image[0]?.src && (\n                  <img className=\"searchPage__resultImage\" src={item.pagemap?.cse_image[0].src} alt=\"\"/>\n                )}\n                {item.displayLink}\n              </a>\n              <a className=\"searchPage__resultTitle\" href={item.link}>\n                <h2>{item.title}</h2>\n              </a> \n              <p className=\"searchPage__resultSnippet\">\n                {item.snippet}\n              </p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SearchPage;\n","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\nimport SearchPage from './components/SearchPage';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Switch>\n          <Route path=\"/search\">\n            <SearchPage/>\n          </Route>\n          <Route path=\"/\">\n            <Home/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer, { initialState } from './components/reducer';\nimport { StateProvider } from './components/StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}